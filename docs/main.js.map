{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact-farmer-dialog/contact-farmer-dialog.component.ts","./src/app/contact-farmer-dialog/contact-farmer-dialog.component.html","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/faq/faq.component.ts","./src/app/faq/faq.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/services.component.ts","./src/app/services/services.component.html","./src/app/trade/services/commodity.service.ts","./src/app/trade/trade.component.ts","./src/app/trade/trade.component.html","./src/app/view-contract/view-contract.component.ts","./src/app/view-contract/view-contract.component.html","./src/app/view-farmers-profile/view-farmers-profile.component.ts","./src/app/view-farmers-profile/view-farmers-profile.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container about-container\">\r\n  <mat-toolbar color=\"primary\" class=\"mb-4 text-center\">\r\n    <span class=\"w-100\">About Assured Contract Farming System</span>\r\n  </mat-toolbar>\r\n  <p class=\"card-text\">\r\n    Welcome to the Assured Contract Farming System platform. Our goal is to bridge the gap between farmers and buyers by providing a secure, transparent, and innovative marketplace. This platform helps farmers access stable markets while ensuring buyers get reliable, quality produce.\r\n  </p>\r\n</div>\r\n\r\n<div class=\"container about-container\">\r\n  <mat-toolbar color=\"primary\" class=\"mb-4 text-center\">\r\n    <span class=\"w-100\">Our Mission</span>\r\n  </mat-toolbar>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12 col-md-4 mb-4 \" >\r\n      <div class=\"card text-center\">\r\n        <div class=\"card-body\" >\r\n          <h1 class=\"card-title font-weight-bold\">Seamless Experience</h1>\r\n          <p class=\"card-text\">We aim to provide a seamless experience for both farmers and buyers with features such as AI-driven matching, secure transactions, and multilingual support.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 col-md-4 mb-4\">\r\n      <div class=\"card text-center\">\r\n        <div class=\"card-body\">\r\n          <h1 class=\"card-title font-weight-bold\">Transparency and Trust</h1>\r\n          <p class=\"card-text\">We prioritize transparency in every transaction, ensuring that both farmers and buyers can trust the platform for fair dealings and clear communication.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 col-md-4 mb-4\">\r\n      <div class=\"card text-center\">\r\n        <div class=\"card-body\">\r\n          <h1 class=\"card-title font-weight-bold\">Empowering Farmers</h1>\r\n          <p class=\"card-text\">Our mission is to empower farmers by providing them access to valuable market insights and resources that enhance their productivity and income stability.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { ServicesComponent } from './services/services.component';\r\nimport { ContactComponent } from './contact/contact.component';  // Import ContactComponent\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ViewContractComponent } from './view-contract/view-contract.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { FaqComponent } from './faq/faq.component';\r\nimport { FarmerProfileComponent } from './view-farmers-profile/view-farmers-profile.component';\r\n\r\nimport { TradeComponent } from './trade/trade.component';\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },   \r\n  { path: 'services', component: ServicesComponent },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'contact', component: ContactComponent },  \r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'FaqComponent', component: FaqComponent },\r\n  { path: 'trade', component: TradeComponent },\r\n  { path: 'view-contract', component: ViewContractComponent },\r\n  { path: 'farmersProfile', component: FarmerProfileComponent },\r\n  { path: '**', redirectTo: '' }  // Handle unknown routes\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'contract-farming';\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"content\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <app-footer></app-footer>\r\n  ","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';  \r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { ServicesComponent } from './services/services.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ViewContractComponent } from './view-contract/view-contract.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { FaqComponent } from './faq/faq.component';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { FarmerProfileComponent } from './view-farmers-profile/view-farmers-profile.component';\r\nimport { ContactFarmerDialogComponent } from './contact-farmer-dialog/contact-farmer-dialog.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { TradeComponent } from './trade/trade.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NavbarComponent,\r\n    ServicesComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    ContactComponent,\r\n    AboutComponent,\r\n    ViewContractComponent,\r\n    RegisterComponent,\r\n    FaqComponent,\r\n    FarmerProfileComponent,\r\n    ContactFarmerDialogComponent,\r\n    TradeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MatSnackBarModule,\r\n    AppRoutingModule,         \r\n    BrowserAnimationsModule,  \r\n    MatFormFieldModule,\r\n    MatExpansionModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatTableModule,      \r\n    FormsModule,            \r\n    ReactiveFormsModule       \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n  ","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-contact-farmer-dialog',\r\n  templateUrl: './contact-farmer-dialog.component.html',\r\n  styleUrls: ['./contact-farmer-dialog.component.css']\r\n})\r\nexport class ContactFarmerDialogComponent {\r\n  constructor(private dialogRef: MatDialogRef<ContactFarmerDialogComponent>) {}\r\n\r\n  onSend() {\r\n    // Logic to send the message goes here\r\n    this.dialogRef.close(); // Close the dialog after sending\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close(); // Close the dialog without action\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Contact Farmer</h2>\r\n<mat-dialog-content>\r\n  <form>\r\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n      <mat-label>Mobile Number</mat-label>\r\n      <input matInput placeholder=\"Enter your mobile number\" required>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput placeholder=\"Enter your email\" required>\r\n    </mat-form-field>\r\n  </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button mat-raised-button color=\"accent\" (click)=\"onSend()\">Send Message</button>\r\n  <button mat-raised-button (click)=\"onClose()\">Cancel</button>\r\n</mat-dialog-actions>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","  <div class=\"center-div\">\r\n    <img src=\"assets/contact.png\" alt=\"Contact Image\" class=\"responsive-img\" id=\"example1\">\r\n  </div>\r\n  <div class=\"center-div\">\r\n    <img src=\"assets/contact1.png\" alt=\"Contact1 Image\" class=\"responsive-img\">\r\n  </div>\r\n  \r\n  <div class=\"contact-container\">\r\n    <mat-card class=\"center-content\">\r\n      <mat-card-title>Please feel free to get in touch with us</mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"form-container\">\r\n          <form>\r\n            <div class=\"form-row\">\r\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\r\n                <mat-label>First Name</mat-label>\r\n                <input matInput placeholder=\"First name\" required />\r\n              </mat-form-field>\r\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\r\n                <mat-label>Last Name</mat-label>\r\n                <input matInput placeholder=\"Last name\" required />\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\r\n                <mat-label>Your Email</mat-label>\r\n                <input matInput type=\"email\" placeholder=\"Enter your email\" required />\r\n              </mat-form-field>\r\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\r\n                <mat-label>Phone Number</mat-label>\r\n                <input matInput placeholder=\"Phone Number\" required />\r\n              </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"fill\" class=\"wide-field\">\r\n              <mat-label>Subject</mat-label>\r\n              <input matInput placeholder=\"Subject\" required />\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"wide-field\">\r\n              <mat-label>Your Message</mat-label>\r\n              <textarea matInput placeholder=\"Enter your message\" rows=\"4\"></textarea>\r\n            </mat-form-field>\r\n            <div mat-dialog-actions align=\"center\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">Send Message</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  ","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-faq',\r\n  templateUrl: './faq.component.html',\r\n  styleUrls: ['./faq.component.css']\r\n})\r\nexport class FaqComponent {\r\n  faqs = [\r\n    {\r\n      question: '1. What is contract farming?',\r\n      answer: 'Contract farming is a system where farmers and buyers enter into pre-agreed contracts that ensure stable prices and secure payments, minimizing risks for both parties. Farmers get assured buyers, and buyers receive dependable, high-quality produce.'\r\n    },\r\n    {\r\n      question: '2. How are contracts secured on the platform?',\r\n      answer: 'Our platform offers government-backed contracts to ensure fair trades. The involvement of government bodies guarantees strict legal actions in case of contract breaches.'\r\n    },\r\n    {\r\n      question: '3. How does the platform support farmers in different regions?',\r\n      answer: 'Our platform offers multi-language support and regional assistance to ensure farmers from all areas can easily access and use the platform.'\r\n    },\r\n    {\r\n      question: '4. How does the platform handle crop failure?',\r\n      answer: 'If a farmer experiences crop failure, government schemes will provide financial help or insurance, ensuring the farmers livelihood is protected.'\r\n    },\r\n    {\r\n      question: '5. Are payments on the platform secure?',\r\n      answer: 'Yes, we use blockchain-based payment systems to ensure all transactions are safe, private, and transparent. This guarantees secure payment methods while protecting user privacy.'\r\n    },\r\n    {\r\n      question: '6. What technologies are used for future updates?',\r\n      answer: 'We plan to incorporate Artificial Intelligence (AI) and IoT technologies for enhanced farm management techniques, contract automation, and risk analysis in future updates.'\r\n    },\r\n    {\r\n      question: '7. How does the platform ensure price stability?',\r\n      answer: 'Our contracts feature pre-arranged terms with a fixed pricing structure, ensuring farmers receive a minimum guaranteed price for their produce, reducing income volatility.'\r\n    },\r\n    {\r\n      question: '8. What are the benefits of using this platform for farmers?',\r\n      answer: 'Farmers benefit from assured market access, income stability, reduced risk, and secure transactions. The platform also automates contract execution to guarantee timely payments.'\r\n    },\r\n\r\n  ];\r\n}\r\n","<br><br><br>\r\n<mat-toolbar color=\"primary\" class=\"d-flex justify-content-center\">\r\n  <h2 class=\"mat-title\" >Frequently Asked Questions</h2>\r\n</mat-toolbar><br><br><br><br>\r\n<div class=\"horizontal-grid\">\r\n<mat-accordion>\r\n  <mat-expansion-panel *ngFor=\"let faq of faqs\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        <strong><h2>{{ faq.question }}</h2></strong>\r\n        \r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>{{ faq.answer }}</p><br>\r\n  </mat-expansion-panel>\r\n</mat-accordion><br>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer\">\r\n  <div class=\"footer-content\">\r\n    <p>&copy; 2024 Assured Contract Farming. All rights reserved.</p>\r\n\r\n    <nav class=\"footer-nav\">\r\n      <a [routerLink]=\"['/about']\">About Us</a>\r\n      <a [routerLink]=\"['/contact']\">Contact Us</a>\r\n      <a [routerLink]=\"['/services']\">Services</a>\r\n      <a [routerLink]=\"['/FaqComponent']\">FAQs</a>\r\n    </nav>\r\n\r\n    <div class=\"footer-social\">\r\n      <h3>Follow Us</h3>\r\n      <div class=\"social-icons\">\r\n        <a href=\"https://facebook.com\" target=\"_blank\"><i class=\"fab fa-facebook\"></i></a>\r\n        <a href=\"https://twitter.com\" target=\"_blank\"><i class=\"fab fa-twitter\"></i></a>\r\n        <a href=\"https://instagram.com\" target=\"_blank\"><i class=\"fab fa-instagram\"></i></a>\r\n        <a href=\"https://linkedin.com\" target=\"_blank\"><i class=\"fab fa-linkedin\"></i></a>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"footer-address\">\r\n      <h3>Contact Us</h3>\r\n      <p>123 Farming Lane,<br>Agri City, AC 12345</p>\r\n      <p>Email: info@kisansetu.com</p>\r\n      <p>Phone: (123) 456-7890</p>\r\n    </div>\r\n  </div>\r\n</footer>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  \r\n  gridItems = [\r\n    { label: 'Government Schemes', icon: 'account_balance', description: 'Information on government schemes for farmers.' },  // New Item\r\n    { label: 'Progress Tracker', icon: 'track_changes', description: 'Track farming progress and milestones.' },              // New Item\r\n    { label: 'Chatbot Help', icon: 'support_agent', description: 'AI-driven chatbot for farmer support and queries.' },       // New Item\r\n    { label: 'Market Insights', icon: 'insights', description: 'Get real-time market data and insights.' },\r\n    { label: 'e-Mandi', icon: 'shopping_bag', description: 'Digital marketplace for farmers.' },\r\n    { label: 'Secure Payment', icon: 'account_balance_wallet', description: 'Safe and secure payment gateway for transactions.' }\r\n  ];\r\n\r\n  selectedItemIndex: number | null = null;\r\n\r\n  selectItem(index: number): void {\r\n    this.selectedItemIndex = this.selectedItemIndex === index ? null : index;\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  additionalServices = [\r\n    { title: 'Guaranteed Contract Farming', description: 'Facilitate transparent agreements between farmers and buyers, ensuring trust and fair benefits on both sides.', icon: 'check_circle' },\r\n    { title: 'Crop Progress Monitoring', description: 'Receive updates on crop growth, delivery timelines, and contract milestones to maintain smooth communication.', icon: 'track_changes' },\r\n    { title: 'Government Support Integration', description: 'Benefit from relevant government schemes and subsidies that align with contract farming practices.', icon: 'account_balance' },\r\n    { title: 'Secure Payment Methods', description: 'Enable safe, verified transactions through reliable payment gateways, ensuring financial security.', icon: 'payment' },\r\n    { title: 'Legal Guidance and Support', description: 'Get legal assistance to handle disputes, resolve breaches, and maintain compliance with agricultural laws.', icon: 'gavel' },\r\n    { title: 'Multilingual Service Availability', description: 'Provide support in various languages to cater to farmers and buyers from diverse backgrounds.', icon: 'language' }\r\n  ];\r\n}\r\n\r\n\r\n","<div class=\"home-container\">\r\n  <marquee scrollamount=\"15\" height=\"20%\">\r\n    <h1 id=\"welcome\" class=\"text-primary text-center\">Welcome to Kissan Setu - Assured Contract Farming System</h1>\r\n  </marquee>\r\n  <h2 class=\"text-center\">This platform connects farmers with potential buyers through secure contracts and reliable transactions.</h2>\r\n</div>\r\n\r\n<div id=\"example1\" class=\"border\">\r\n  <img src=\"assets/home.jpg\" class=\"img-fluid custom-img\" alt=\"Responsive Image\" />\r\n</div>\r\n\r\n<br><br>\r\n<div class=\"horizontal-grid\">\r\n  <mat-card *ngFor=\"let item of gridItems\" class=\"grid-item\">\r\n    <div class=\"icon-container\">\r\n      <mat-icon class=\"grid-icon\">{{ item.icon }}</mat-icon>\r\n    </div>\r\n    <div class=\"text-container\">\r\n      <h3>{{ item.label }}</h3>\r\n      <p class=\"description\">{{ item.description }}</p>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n<div class=\"row\"></div>\r\n  <div class=\"col-12\" *ngFor=\"let additionalService of additionalServices\">\r\n    <div class=\"service-item card text-center mb-3\">\r\n      <div class=\"text-center\">\r\n        <mat-icon class=\"service-icon\" aria-hidden=\"false\" aria-label=\"{{additionalService.title}}\">{{ additionalService.icon }}</mat-icon>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <h2 class=\"card-title\">{{ additionalService.title }}</h2>\r\n        <p class=\"card-text\">{{ additionalService.description }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  get email() {\r\n    return this.loginForm.get('email');\r\n  }\r\n\r\n  get password() {\r\n    return this.loginForm.get('password');\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.loginForm.valid) {\r\n      // Handle login logic here\r\n      console.log('Login successful', this.loginForm.value);\r\n    }\r\n  }\r\n}\r\n"," <div class=\"contact-container\"> \r\n  <mat-card class=\"center-content\">\r\n    <mat-card-title>Login</mat-card-title>\r\n    <mat-card-content>\r\n      <div class=\"form-container\">\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" placeholder=\"Enter your email\" required />\r\n            <mat-error *ngIf=\"email.invalid && email.touched\">Email is required.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Password</mat-label>\r\n            <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" required />\r\n            <mat-error *ngIf=\"password.invalid && password.touched\">Password is required.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <div style=\"display: flex; justify-content: space-between; align-items: center;\">\r\n            <mat-checkbox>\r\n              Remember Me\r\n            </mat-checkbox>\r\n            <!-- <a mat-button routerLink=\"/forgot-password\" style=\"font-size: 0.9rem;\">Forgot Password?</a> -->\r\n          </div>\r\n\r\n          <button mat-raised-button color=\"primary\" type=\"submit\" class=\"full-width\">Login</button>\r\n\r\n          <a mat-button routerLink=\"/register\" class=\"full-width\">Register Now</a>\r\n        </form>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent {\r\n  dropdownVisible: string | null = null; // Track which dropdown is visible\r\n\r\n  toggleNavbar() {\r\n    const navLinks = document.getElementById('navLinks');\r\n    if (navLinks) {\r\n      navLinks.classList.toggle('responsive');\r\n    }\r\n  }\r\n\r\n  closeNavbar() {\r\n    const navLinks = document.getElementById('navLinks');\r\n    if (navLinks && navLinks.classList.contains('responsive')) {\r\n      navLinks.classList.remove('responsive');\r\n    }\r\n    this.dropdownVisible = null; // Hide any open dropdown\r\n  }\r\n\r\n  showDropdown(dropdown: string) {\r\n    this.dropdownVisible = dropdown;\r\n  }\r\n\r\n  hideDropdown() {\r\n    this.dropdownVisible = null;\r\n  }\r\n\r\n  handleLinkClick() {\r\n    this.closeNavbar(); // Close navbar and dropdowns on link click\r\n  }\r\n\r\n  constructor(private snackBar: MatSnackBar) {}\r\n  \r\n  handleLinkTap() {\r\n    this.snackBar.open('Coming soon!', 'Close', {\r\n      duration: 3000, // Display message for 3 seconds\r\n    }); // Close navbar and dropdowns on link click\r\n  }\r\n}\r\n","<mat-toolbar color=\"warn\">\r\n\r\n  <span>KISSAN SETU</span>\r\n\r\n  <div class=\"nav-links\" id=\"navLinks\">\r\n    <a [routerLink]=\"['/']\" (click)=\"handleLinkClick()\" style=\"text-decoration: none; color: white;\">\r\n      <mat-icon>home</mat-icon>\r\n    </a>\r\n\r\n    <div class=\"dropdown\" (mouseenter)=\"showDropdown('services')\" (mouseleave)=\"hideDropdown()\">\r\n      <button mat-button [routerLink]=\"['/services']\"(click)=\"handleLinkClick()\">Services</button>\r\n      <div class=\"dropdown-content\" [class.show]=\"dropdownVisible === 'services'\">\r\n        <a mat-button (click)=\"handleLinkClick()\">Market Insights & Access</a>\r\n        <a mat-button (click)=\"handleLinkClick()\">AI-Powered Buyer Matching</a>\r\n        <a mat-button (click)=\"handleLinkClick()\">Secure Contracts</a>\r\n         <a mat-button (click)=\"handleLinkClick()\">IoT Based Farm Management</a>\r\n        <a mat-button (click)=\"handleLinkClick()\">Secure Payments</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"dropdown\" (mouseenter)=\"showDropdown('farmers')\" (mouseleave)=\"hideDropdown()\">\r\n      <button mat-button (click)=\"handleLinkClick()\">Farmers</button>\r\n      <div class=\"dropdown-content\" [class.show]=\"dropdownVisible === 'farmers'\">\r\n        <a mat-button [routerLink]=\"['/']\" (click)=\"handleLinkClick()\">Submit Produce Details</a>\r\n        <a mat-button [routerLink]=\"['/']\" (click)=\"handleLinkClick()\">Training Resources</a>\r\n        <a mat-button [routerLink]=\"['/view-contract']\" (click)=\"handleLinkClick()\">View Contract</a>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"dropdown\" (mouseenter)=\"showDropdown('buyers')\" (mouseleave)=\"hideDropdown()\">\r\n      <button mat-button  (click)=\"handleLinkClick()\">Buyers</button>\r\n      <div class=\"dropdown-content\" [class.show]=\"dropdownVisible === 'buyers'\">\r\n        <a mat-button [routerLink]=\"['/farmersProfile']\" (click)=\"handleLinkClick()\">View Farmers Profile</a>\r\n      </div>\r\n    </div>\r\n\r\n    <a mat-button [routerLink]=\"['/trade']\" (click)=\"handleLinkClick()\">Trade</a>\r\n\r\n    <div class=\"dropdown\" (mouseenter)=\"showDropdown('about')\" (mouseleave)=\"hideDropdown()\">\r\n      <button mat-button [routerLink]=\"['/about']\" (click)=\"handleLinkClick()\">About Us</button>\r\n      <div class=\"dropdown-content\" [class.show]=\"dropdownVisible === 'about'\">\r\n        <a mat-button [routerLink]=\"['/about']\" (click)=\"handleLinkClick()\">Our Mission</a>\r\n        <a mat-button [routerLink]=\"['/about']\" (click)=\"handleLinkClick()\">About Assured Contract Farming</a>\r\n      </div>\r\n    </div>\r\n\r\n    <a mat-button [routerLink]=\"['/contact']\" (click)=\"handleLinkClick()\">Contact Us</a>\r\n     <!-- Language Dropdown -->\r\n     <div class=\"dropdown\" (mouseenter)=\"showDropdown('language')\" (mouseleave)=\"hideDropdown()\">\r\n      <mat-icon>language</mat-icon>\r\n      <div class=\"dropdown-content\" [class.show]=\"dropdownVisible === 'language'\">\r\n        <a mat-button (click)=\"handleLinkClick()\">English</a>\r\n        <a mat-button (click)=\"handleLinkTap()\">Hindi</a>\r\n        <a mat-button (click)=\"handleLinkTap()\">Bengali</a>\r\n        <a mat-button (click)=\"handleLinkTap()\">Marathi</a>\r\n        <a mat-button (click)=\"handleLinkTap()\">Telugu</a>\r\n        <a mat-button (click)=\"handleLinkTap()\">Tamil</a>\r\n        <a mat-button (click)=\"handleLinkTap()\">Gujarati</a>\r\n        <a mat-button (click)=\"handleLinkTap()\">Kannada</a>\r\n        <a mat-button (click)=\"handleLinkTap()\">Odia</a>\r\n        <a mat-button (click)=\"handleLinkTap()\">Malayalam</a>\r\n      </div>\r\n    </div>\r\n    <a mat-raised-button color=\"primary\" [routerLink]=\"['/login']\" (click)=\"handleLinkClick()\">Login</a>\r\n  </div>\r\n\r\n  <span class=\"hamburger\" (click)=\"toggleNavbar()\">&#9776;</span>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"example1\">\r\n  <div class=\"contact-container\"> \r\n    <mat-card class=\"center-content\">\r\n      <div class=\"spacer-top\"></div> \r\n      <mat-card-title>Register</mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"form-container\">\r\n          <form class=\"register-form\">\r\n            <mat-form-field appearance=\"outline\" class=\"wide-field\">\r\n              <mat-label>First Name</mat-label>\r\n              <input matInput type=\"text\" placeholder=\"Enter your first name\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"wide-field\">\r\n              <mat-label>Last Name</mat-label>\r\n              <input matInput type=\"text\" placeholder=\"Enter your last name\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"wide-field\">\r\n              <mat-label>Email</mat-label>\r\n              <input matInput type=\"email\" placeholder=\"Enter your email\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"wide-field\">\r\n              <mat-label>Password</mat-label>\r\n              <input matInput type=\"password\" placeholder=\"Enter your password\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"wide-field\">\r\n              <mat-label>Confirm Password</mat-label>\r\n              <input matInput type=\"password\" placeholder=\"Confirm your password\" required>\r\n            </mat-form-field>\r\n\r\n            <button mat-raised-button color=\"primary\" class=\"full-width\">Register</button>\r\n            <div class=\"login-text\">\r\n              Already have an account? \r\n              <button mat-button routerLink=\"/login\" class=\"login-button\">Login</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.css']\r\n})\r\nexport class ServicesComponent {\r\n  services = [\r\n    \r\n    { title: 'Market Insights & Access', description: 'Offer real-time data on market trends, pricing, and demand to help farmers make informed decisions.', image: 'assets/market_insights.jpeg' },\r\n    { title: 'AI-Powered Buyer Matching', description: 'Use AI to connect farmers with ideal buyers, based on crop types, quantities, and current market needs.', image: 'assets/Ai.jpeg' },\r\n   \r\n  ];\r\n  \r\n}","<div class=\"container my-4\">\r\n  <mat-toolbar color=\"primary\" class=\"d-flex justify-content-center\">\r\n  <h2 class=\"mat-title\" >Our Services</h2>\r\n  </mat-toolbar>\r\n  \r\n  <div class=\"services-grid\">\r\n    <div class=\"service-item\" *ngFor=\"let service of services\">\r\n      <img [src]=\"service.image\" alt=\"{{service.title}}\" class=\"service-image\" />\r\n      <h3>{{ service.title }}</h3>\r\n      <p>{{ service.description }}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"services-container\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-sm-6 col-md-4 mb-4\">\r\n        <div class=\"card text-center h-100\">\r\n          <div class=\"card-body\">\r\n            <i class=\"fas fa-lock fa-3x mb-3\" style=\"color: #3f51b5;\"></i>\r\n            <h5 class=\"card-title\">Secure Contracts</h5>\r\n            <p class=\"card-text\">Assured agreements between farmers and buyers.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-sm-6 col-md-4 mb-4\">\r\n        <div class=\"card text-center h-100\">\r\n          <div class=\"card-body\">\r\n            <i class=\"fas fa-robot fa-3x mb-3\" style=\"color: #3f51b5;\"></i>\r\n            <h5 class=\"card-title\">IoT Based Farm Management</h5>\r\n            <p class=\"card-text\">An easy-to-use farm management platform that assists agricultural stakeholders across the value chain.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-sm-6 col-md-4 mb-4\">\r\n        <div class=\"card text-center h-100\">\r\n          <div class=\"card-body\">\r\n            <i class=\"fas fa-money-bill-wave fa-3x mb-3\" style=\"color: #3f51b5;\"></i>\r\n            <h5 class=\"card-title\">Secure Payments</h5>\r\n            <p class=\"card-text\">Safe, timely transactions for trust and efficiency.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Commodity } from '../models/commodity';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommodityService {\r\n  // List of commodities and their respective varieties\r\n  commodities: Commodity[] = [\r\n    { name: 'Wheat', varieties: ['Durum', 'Hard Red', 'Soft Red'] },\r\n    { name: 'Rice', varieties: ['Basmati', 'Jasmine', 'Brown Rice'] },\r\n    { name: 'Corn', varieties: ['Sweet Corn', 'Field Corn'] }\r\n  ];\r\n\r\n  // Method to get the list of commodities\r\n  getCommodities(): Commodity[] {\r\n    return this.commodities;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CommodityService } from './services/commodity.service';\r\nimport { Commodity } from './models/commodity';\r\n\r\n@Component({\r\n  selector: 'app-trade',\r\n  templateUrl: './trade.component.html',\r\n  styleUrls: ['./trade.component.css']\r\n})\r\nexport class TradeComponent {\r\n  trade: FormGroup;\r\n  isSeller: boolean = true; // Default as seller\r\n  commodities: Commodity[] = []; // Holds list of commodities\r\n  commodityVarieties: string[] = []; // Holds the varieties based on selected commodity\r\n\r\n  constructor(private fb: FormBuilder, private commodityService: CommodityService) {\r\n    this.commodities = this.commodityService.getCommodities(); // Fetch commodity list\r\n\r\n    // Initialize the form\r\n    this.trade = this.fb.group({\r\n      userType: ['seller', Validators.required], // Seller or Buyer\r\n      commodity: ['', Validators.required],      // Commodity\r\n      variety: ['', Validators.required],        // Variety based on Commodity\r\n      quantity: ['', Validators.required],       // Quantity\r\n      quantityUnit: ['QTL', Validators.required], // Quantity unit\r\n      price: ['', Validators.required],          // Price\r\n      priceUnit: ['INR', Validators.required],   // Price unit\r\n      location: ['', Validators.required],       // Location\r\n      startDate: ['', Validators.required],      // Start date\r\n      endDate: ['', Validators.required],        // End date\r\n      description: [''],                         // Additional information\r\n      terms: [false, Validators.requiredTrue],   // T&C checkbox\r\n      uploadedDocument: [null, Validators.required] // Uploaded document\r\n    });\r\n  }\r\n\r\n  // Event handler for commodity selection change\r\n  onCommodityChange(event: any): void {\r\n    const selectedCommodity = this.commodities.find(commodity => commodity.name === event.target.value);\r\n    this.commodityVarieties = selectedCommodity ? selectedCommodity.varieties : [];\r\n    this.trade.controls['variety'].setValue(''); // Reset variety when commodity changes\r\n  }\r\n\r\n  // Toggles between seller and buyer\r\n  toggleUserType(userType: string): void {\r\n    this.isSeller = userType === 'seller';\r\n  }\r\n\r\n  // Handle file change for document upload\r\n  onFileChange(event: any): void {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      this.trade.patchValue({ uploadedDocument: file });\r\n    }\r\n  }\r\n\r\n  // Submit handler for form\r\n  onSubmit(): void {\r\n    if (this.trade.valid) {\r\n      console.log(this.trade.value); // Replace with actual form submission logic\r\n    } else {\r\n      console.log('Form is invalid');\r\n    }\r\n  }\r\n}\r\n","\r\n<div class=\"background-container\">\r\n  <br>\r\n<div class=\"form-container\">\r\n  <h2>Create Your Trade</h2>\r\n\r\n  <!-- User type toggle: Seller/Buyer -->\r\n  <div class=\"user-type-toggle\">\r\n    <button [class.active]=\"isSeller\" (click)=\"toggleUserType('seller')\">\r\n      <span class=\"icon\">📦</span> Seller\r\n    </button>\r\n    <button [class.active]=\"!isSeller\" (click)=\"toggleUserType('buyer')\">\r\n      <span class=\"icon\">💼</span> Buyer\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Form starts -->\r\n  <form [formGroup]=\"trade\" (ngSubmit)=\"onSubmit()\">\r\n    \r\n    <!-- Commodity selection -->\r\n    <div class=\"card\">\r\n      <label for=\"commodity\">Commodity</label>\r\n      <select formControlName=\"commodity\" (change)=\"onCommodityChange($event)\">\r\n        <option value=\"\">Select commodity</option>\r\n        <option *ngFor=\"let commodity of commodities\" [value]=\"commodity.name\">{{ commodity.name }}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Variety dropdown based on commodity -->\r\n    <div class=\"card\" *ngIf=\"commodityVarieties.length > 0\">\r\n      <label for=\"variety\">Variety</label>\r\n      <select formControlName=\"variety\">\r\n        <option value=\"\">Select variety</option>\r\n        <option *ngFor=\"let variety of commodityVarieties\" [value]=\"variety\">{{ variety }}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Quantity input -->\r\n    <div class=\"card\">\r\n      <label for=\"quantity\">Quantity</label>\r\n      <input formControlName=\"quantity\" placeholder=\"Enter quantity\" />\r\n      <select formControlName=\"quantityUnit\">\r\n        <option value=\"QTL\">QTL</option>\r\n        <option value=\"KG\">KG</option>\r\n        <option value=\"TON\">TON</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Price input -->\r\n    <div class=\"card\">\r\n      <label for=\"price\">Price</label>\r\n      <input formControlName=\"price\" placeholder=\"Enter price\" />\r\n      <select formControlName=\"priceUnit\">\r\n        <option value=\"INR\">INR</option>\r\n        <option value=\"USD\">USD</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Location input -->\r\n    <div class=\"card\">\r\n      <label for=\"location\">Location</label>\r\n      <input formControlName=\"location\" placeholder=\"Enter location (City, State)\" />\r\n    </div>\r\n\r\n    <!-- Start and End date -->\r\n    <div class=\"card\">\r\n      <label for=\"startDate\">Start Date</label>\r\n      <input formControlName=\"startDate\" type=\"date\" />\r\n      <label for=\"endDate\">End Date</label>\r\n      <input formControlName=\"endDate\" type=\"date\" />\r\n    </div>\r\n\r\n    <!-- Description input -->\r\n    <div class=\"card\">\r\n      <label for=\"description\">Description</label>\r\n      <textarea formControlName=\"description\" placeholder=\"Enter quality, terms, etc.\"></textarea>\r\n    </div>\r\n\r\n    <!-- Document upload -->\r\n    <div class=\"card upload-section\">\r\n      <label for=\"fileUpload\">Upload Document</label>\r\n      <input type=\"file\" (change)=\"onFileChange($event)\" />\r\n    </div>\r\n\r\n    <!-- Terms and conditions checkbox -->\r\n    <label class=\"terms-label\">\r\n      <input type=\"checkbox\" formControlName=\"terms\" />\r\n      I agree to the Terms and Conditions\r\n    </label>\r\n\r\n    <!-- Submit button -->\r\n    <a mat-raised-button type=\"submit\" color=\"primary\" class=\"submit-button\">Submit</a>\r\n\r\n  </form>\r\n</div>\r\n<br>  \r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nexport interface Contract {\r\n  id: string;\r\n  crop: string;\r\n  status: string;\r\n}\r\n\r\nconst CONTRACT_DATA: Contract[] = [\r\n  {id: 'C001', crop: 'Wheat', status: 'Active'},\r\n  {id: 'C002', crop: 'Rice', status: 'Completed'},\r\n  {id: 'C003', crop: 'Maize', status: 'Active'},\r\n  {id: 'C004', crop: 'Pulse', status: 'Active'},\r\n  {id: 'C005', crop: 'Tomato', status: 'Completed'},\r\n  {id: 'C006', crop: 'Potato', status: 'Pending'}\r\n];\r\n\r\n@Component({\r\n  selector: 'app-view-contract',\r\n  templateUrl: './view-contract.component.html',\r\n  styleUrls: ['./view-contract.component.css']\r\n})\r\nexport class ViewContractComponent {\r\n  displayedColumns: string[] = ['contractId', 'crop', 'status', 'action'];\r\n  contracts = CONTRACT_DATA;\r\n}","  <div class=\"view-contract-container\">\r\n    <mat-toolbar color=\"primary\" class=\"mat-toolbar\">\r\n      <h1 class=\"mat-title\">Our Contracts</h1>\r\n    </mat-toolbar><br><br>\r\n    \r\n    <mat-table [dataSource]=\"contracts\" class=\"mat-elevation-z8\">\r\n      <ng-container matColumnDef=\"contractId\">\r\n        <mat-header-cell *matHeaderCellDef> Contract ID </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contract\"> {{contract.id}} </mat-cell>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"crop\">\r\n        <mat-header-cell *matHeaderCellDef> Crop </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contract\"> {{contract.crop}} </mat-cell>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"status\">\r\n        <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contract\"> {{contract.status}} </mat-cell>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contract\">\r\n          <div class=\"action-buttons\">\r\n            <button mat-raised-button color=\"primary\">Details</button>\r\n            <button mat-raised-button color=\"accent\">Update</button>\r\n          </div>\r\n        </mat-cell>\r\n      </ng-container>\r\n  \r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ContactFarmerDialogComponent } from '../contact-farmer-dialog/contact-farmer-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-view-farmers-profile',\r\n  templateUrl: './view-farmers-profile.component.html',\r\n  styleUrls: ['./view-farmers-profile.component.css']\r\n})\r\n\r\nexport class FarmerProfileComponent implements OnInit {\r\n  farmer = {\r\n    location: 'Indore, M.P.',\r\n    farmSize: 15,\r\n    experience: 10,\r\n    crops: ['Wheat', 'Rice', 'Maize', 'Pulse', 'Millets'],\r\n    pastContracts: [\r\n      {id: 'C001', crop: 'Wheat', status: 'Active', completionDate: '2024-08-10'},\r\n      {id: 'C002', crop: 'Rice', status: 'Completed', completionDate: '2024-09-01'},\r\n      {id: 'C003', crop: 'Maize', status: 'Active', completionDate: '2024-09-05'},\r\n      {id: 'C004', crop: 'Pulse', status: 'Active', completionDate: '2024-10-07'},\r\n    ],\r\n    reviews: [\r\n      { buyerName: 'Acme Corp', comment: 'Great quality crops, timely delivery.' },\r\n      { buyerName: 'Fresh Farms', comment: 'Reliable and professional.' },\r\n      { buyerName: 'Green Valley', comment: 'Excellent communication and crop quality.' },\r\n      { buyerName: 'Harvest Co.', comment: 'Always delivers on time, great service.' },\r\n      { buyerName: 'AgriSolutions', comment: 'Very satisfied with the contract process and outcome.' }\r\n        ]\r\n  };\r\n\r\n  constructor(private dialog: MatDialog) {}\r\n  ngOnInit(): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  // Method to open the dialog\r\n  openContactFarmerDialog() {\r\n    const dialogRef = this.dialog.open(ContactFarmerDialogComponent, {\r\n      width: '90%', // Set width to 90% for better responsiveness\r\n      maxWidth: '400px' // Limit max width for larger screens\r\n    });\r\n  \r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // Handle any actions after the dialog is closed\r\n    });\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"container farmer-profile-container\">\r\n  <mat-toolbar color=\"primary\" class=\"mb-4\">\r\n    <span>Farmer's Profile</span>\r\n  </mat-toolbar>\r\n\r\n  <div class=\"row\"> \r\n    <div class=\"col-md-6\">\r\n      <mat-card class=\"mb-3\">\r\n        <mat-card-title>Farm Information</mat-card-title><br>\r\n        <mat-card-content>\r\n          <p><strong>Location:</strong> {{ farmer.location }}</p>\r\n          <p><strong>Farm Size:</strong> {{ farmer.farmSize }} acres</p>\r\n          <p><strong>Experience:</strong> {{ farmer.experience }} years</p>\r\n          <p><strong>Crops:</strong> {{ farmer.crops.join(', ') }}</p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color=\"accent\" (click)=\"openContactFarmerDialog()\">Contact Farmer</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n\r\n    <div class=\"col-md-6\">\r\n  <mat-card class=\"mb-3\">\r\n    <mat-card-title>Past Contracts</mat-card-title>\r\n    <mat-card-content>\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Contract ID</th>\r\n              <th>Crop</th>\r\n              <th>Status</th>\r\n              <th>Completion Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n        <tr *ngFor=\"let contract of farmer.pastContracts\">\r\n          <td data-label=\"Contract ID\">{{ contract.id }}</td>\r\n          <td data-label=\"Crop\">{{ contract.crop }}</td>\r\n          <td data-label=\"Status\">{{ contract.status }}</td>\r\n          <td data-label=\"Completion Date\">{{ contract.completionDate }}</td>\r\n        </tr>\r\n</tbody>\r\n\r\n        </table>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <mat-card class=\"mb-3\">\r\n        <mat-card-title>Buyer Reviews</mat-card-title>\r\n        <mat-card-content>\r\n          <div *ngFor=\"let review of farmer.reviews\" class=\"review\">\r\n            <mat-icon>person</mat-icon>\r\n            <p><strong>{{ review.buyerName }}:</strong> {{ review.comment }}</p><br>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}